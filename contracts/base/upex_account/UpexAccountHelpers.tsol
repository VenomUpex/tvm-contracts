// SPDX-License-Identifier: UNLICENSED
pragma ever-solidity >= 0.62.0;

import "@broxus/contracts/contracts/libraries/MsgFlag.tsol";
import "../../libraries/Gas.tsol";
import "../../libraries/Callback.tsol";
import "../../libraries/PlatformTypes.tsol";
import "../../libraries/Errors.tsol";
import "../../libraries/Constants.tsol";
import "./UpexAccountStorage.tsol";
import {RPlatform as Platform} from "../../Platform.tsol";


abstract contract UpexAccountHelpers is UpexAccountStorage {
    function _reserve() internal pure returns (uint128) {
        return math.max(address(this).balance - msg.value, CONTRACT_MIN_BALANCE);
    }


    modifier reserve() {
        tvm.rawReserve(_reserve(), 0);
        _;
    }

    modifier onlyRoot() {
        require (msg.sender == root, Errors.NOT_ROOT);
        _;
    }
}
